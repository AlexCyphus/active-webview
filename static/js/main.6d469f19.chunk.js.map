{"version":3,"sources":["components/ActionButton.js","components/Row.js","components/Slider.js","components/Popup.js","components/InfoCard.js","components/HeaderTitle.js","components/FixedButton.js","components/DarkModeWrapper.js","App.js","functions.js","reportWebVitals.js","index.js"],"names":["ActionButton","text","actionHandler","specClass","color","size","close","closeHandler","className","onClick","console","log","toUpperCase","String","Row","title","image","rowClickHandler","children","roundImage","src","Slider","sliderScreen","title1","title2","handleSliderChange","Popup","description","overlayHandler","placeholder","buttonText","InfoCard","buttonAction","closeAction","handleOverlay","HeaderTitle","backHandler","FixedButton","buttonHandler","DarkModeWrapper","App","props","state","popup","infocard","dark","currency","partners","undefined","profile","bind","desiredSliderScreen","this","setState","data","myProfile","myPartners","myCurrency","window","NativeApp","getPartners","getMyProfile","getCurrency","webkit","messageHandlers","postMessage","getMyPartners","getMyCurrency","getDarkModeEnabled","isDarkModeEnabled","getData","action","prefix","suffix","name","capitalize","word","charAt","slice","sendTrackingPoint","val","value","split","length","error","MainContent","content","tp","JSON","stringify","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8RAAe,SAASA,EAAT,GAA2F,IAApEC,EAAmE,EAAnEA,KAAMC,EAA6D,EAA7DA,cAAeC,EAA8C,EAA9CA,UAAiBC,GAA6B,EAAnCC,KAAmC,EAA7BD,OAAOE,EAAsB,EAAtBA,MAAsB,EAAfC,aAMtF,OAHsBH,EAAR,SAAVA,EAA0B,kBAChB,kBAEN,CACJ,sBAAKI,UAAWL,EAAhB,UACI,qBAAKK,UAAU,2CAA2CC,QAAS,kBAAIC,QAAQC,IAAI,MAAnF,SACI,qBAAKH,UAAW,uBAAyBJ,EAAzC,SACA,mBAAGI,UAAU,2BAAb,SAAyCP,EAAKW,qBAGvC,IAAVN,EACG,qBAAKE,UAAU,4CAA4CC,QAASP,EAApE,SACI,wCAGJ,OAXwBD,EAAOY,OAAOX,KCLvC,SAASY,EAAT,GAAqE,IAAvDC,EAAsD,EAAtDA,MAAOC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,gBAAiBC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,WAClE,OACI,sBAAKX,UAAU,gBAAgBC,QAASQ,EAAxC,UACI,qBAAKT,UAAU,sBAAf,SACI,qBAAKY,IAAK,eAAeJ,EAAOR,UAAW,cAAgBW,EAAa,cAAgB,UAE5F,sBAAKX,UAAU,qBAAf,UACI,mBAAGA,UAAU,YAAb,SAA0BO,IACzBG,QCVF,SAASG,EAAT,GAAqE,IAApDC,EAAmD,EAAnDA,aAAcC,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,mBAC1D,OACI,sBAAKjB,UAAU,gBAAf,UACI,qBAAKA,UAAW,2BAA6C,GAAhBc,EAAoB,8BAAgC,MAAOb,QAAS,kBAAMgB,EAAmB,IAA1I,SAA8I,mBAAGjB,UAAU,oBAAb,SAAkCe,MAChL,qBAAKf,UAAW,2BAA6C,GAAhBc,EAAoB,8BAAgC,MAAOb,QAAS,kBAAMgB,EAAmB,IAA1I,SAA8I,mBAAGjB,UAAU,oBAAb,SAAkCgB,SCD7K,SAASE,EAAT,GAAyF,IAAzEX,EAAwE,EAAxEA,MAAOY,EAAiE,EAAjEA,YAAaT,EAAoD,EAApDA,SAAUU,EAA0C,EAA1CA,eAAgBC,EAA0B,EAA1BA,YAAaC,EAAa,EAAbA,WAEtF,OADApB,QAAQC,IAAIgB,GAER,qCACA,qBAAKnB,UAAU,gBAAgBC,QAASmB,IACxC,sBAAKpB,UAAU,kBAAf,UACI,mBAAGA,UAAU,cAAb,SAA4BO,IAC5B,qBAAKP,UAAU,2BAAf,SACKmB,EAAc,mBAAGnB,UAAU,oBAAb,SAAkCmB,IAAiBT,IAEtE,qBAAKV,UAAU,wBAAf,SACI,uBAAOqB,YAAaA,MAExB,cAAC7B,EAAD,CAAcC,KAAM6B,EAAY1B,MAAM,OAAOE,OAAO,UCdjD,SAASyB,EAAT,GAA2F,IAAxEhB,EAAuE,EAAvEA,MAAOG,EAAgE,EAAhEA,SAAUc,EAAsD,EAAtDA,aAAcC,EAAwC,EAAxCA,YAAaH,EAA2B,EAA3BA,WAAYI,EAAe,EAAfA,cACtF,OACI,qCACA,qBAAK1B,UAAU,gBAAgBC,QAASyB,IACxC,sBAAK1B,UAAU,qBAAf,UACA,qBAAKA,UAAU,mBAAmBC,QAASwB,EAA3C,eACE,qBAAKzB,UAAU,2BAAf,SACE,mBAAGA,UAAU,iBAAb,SAA+BO,MAEjC,qBAAKP,UAAU,wBAAf,SACGU,IAEH,cAAClB,EAAD,CAAcC,KAAM6B,EAAY3B,UAAW,sBAAuBM,QAASuB,UCdtE,SAASG,EAAT,GAA4C,IAAtBpB,EAAqB,EAArBA,MAAOqB,EAAc,EAAdA,YACxC,OACI,qBAAK5B,UAAU,yBAAf,SACI,sBAAKA,UAAU,qBAAf,UACI,qBAAKA,UAAU,aAAaC,QAAS2B,EAArC,SAAkD,qBAAK5B,UAAU,iBAAiBY,IAAI,iBACtF,8BAAK,mBAAGZ,UAAU,eAAb,SAA6BO,WCLnC,SAASsB,EAAT,GAA8C,IAAxBrB,EAAuB,EAAvBA,MAAOsB,EAAgB,EAAhBA,cACxC,OACA,qBAAK9B,UAAU,wBAAwBC,QAAS6B,EAAhD,SACI,qBAAK9B,UAAU,wBAAf,SACI,qBAAKY,IAAK,eAAeJ,Q,UCCtBuB,EAFS,SAAC,GAAD,IAAErB,EAAF,EAAEA,SAAF,OAAgB,qBAAKV,UAAU,cAAf,SAA8BU,KCmGvDsB,G,wDAzFb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXpB,aAAc,EACdqB,OAAO,EACPC,UAAU,EACVC,MAAM,EACNC,SAAU,KACVC,cAAUC,EACVC,aAASD,GAEX,EAAKvB,mBAAqB,EAAKA,mBAAmByB,KAAxB,gBAXT,E,+DAcAC,GACjBC,KAAKC,SAAS,CAAC/B,aAAc6B,M,0CAI7B,IAAMG,ECoBa,WACrB,IAAIC,EACAC,EACAC,EAmBJ,OAfIC,OAAOC,WACTH,EAAaE,OAAOC,UAAUC,cAC9BL,EAAYG,OAAOC,UAAUE,eAC7BJ,EAAaC,OAAOC,UAAUG,eAIvBJ,OAAOK,SAEdL,OAAOK,OAAOC,gBAAgBH,aAAaI,YAAY,IACvDP,OAAOK,OAAOC,gBAAgBE,cAAcD,YAAY,IACxDP,OAAOK,OAAOC,gBAAgBG,cAAcF,YAAY,IACxDP,OAAOK,OAAOC,gBAAgBI,mBAAmBH,YAAY,KAGxD,CACLV,UAAWA,EACXC,WAAYA,EACZC,WAAYA,EACZY,mBAAmB,GD9CNC,GAEblB,KAAKC,SAAS,CACZR,KAAMS,EAAKe,kBACXvB,SAAUQ,EAAKG,WACfV,SAAUO,EAAKE,WACfP,QAASK,EAAKC,WACb7C,QAAQC,IAAIyC,KAAKV,U,yBAInB6B,GACD,OC1CoBC,ED0CL,cCzCV,SAACC,GAEN,IAAId,EACAe,EAEEC,EAAa,SAACC,GAAD,OAAUA,EAAKC,OAAO,GAAGjE,cAAgBgE,EAAKE,MAAM,IAwBvE,OArBIpB,OAAOC,WACTe,EAAO,OAASC,EAAWH,GAAU,IAAMG,EAAWF,GACtDd,EAAYD,OAAOC,WAIZD,OAAOK,QACdW,EAAOC,EAAWH,GAAU,IAAMG,EAAWF,GAC7Cd,EAAY,CACVoB,kBAAmB,SAACL,GAAD,IAAOM,IAAP,gEAAoBtB,OAAOK,OAAOC,gBAAgBe,kBAAkBd,YAAY,CAACS,KAAMA,EAAMO,MAAOD,QAMzHN,EAAO,OAASC,EAAWH,GAAU,IAAMG,EAAWF,GACtDd,EAAY,CACVoB,kBAAmB,SAACL,GAAUhE,QAAQC,IAAI+D,WAIhC1B,GAAVyB,EAA4B,KAE5BC,EAAKQ,MAAM,KAAKC,OAAS,EAAUzE,QAAQ0E,MAAM,4CACzCzB,EAAUoB,kBAAkBL,KDSVH,GC1CX,IAACC,I,+BD6Cb,IAAD,OAEAa,EAAc,WAClB,OACA,sBAAK7E,UAAU,MAAf,UACA,sBAAMkE,KAAK,WAAWY,QAAQ,2EAC9B,wBAAQ7E,QAAS,kBAAM,EAAK8E,GAAG,aAA/B,4BACA,wBAAQ9E,QAAS,kBAAM,EAAK8E,GAAG,aAA/B,wBACA,gCACE,mBAAG/E,UAAU,eAAb,uBADF,IAC4C,+BAAM,8BAAMgF,KAAKC,UAAU,EAAK/C,MAAMI,cAChF,mBAAGtC,UAAU,eAAb,mBAFF,IAEwC,+BAAM,8BAAMgF,KAAKC,UAAU,EAAK/C,MAAMG,UAC5E,mBAAGrC,UAAU,eAAb,uBAHF,IAG4C,+BAAM,8BAAMgF,KAAKC,UAAU,EAAK/C,MAAMK,cAChF,mBAAGvC,UAAU,eAAb,sBAJF,IAI2C,+BAAM,8BAAMgF,KAAKC,UAAU,EAAK/C,MAAMO,gBAEjF,cAACd,EAAD,CAAapB,MAAO,kBACpB,cAACM,EAAD,CACEE,OAAQ,QACRC,OAAQ,QACRF,aAAc,EAAKoB,MAAMpB,aACzBG,mBAAoB,EAAKA,qBAE3B,eAACX,EAAD,CAAKC,MAAM,0BAA0BC,MAAO,oBAAqBG,YAAY,EAA7E,UACE,yEACA,8BAAMqE,KAAKC,UAAU,EAAK/C,YAE5B,cAAC5B,EAAD,CAAKC,MAAM,0BAA0BC,MAAO,qBAA5C,SACE,oSAEF,cAAChB,EAAD,CAAcC,KAAM,cAAeG,MAAO,OAAQE,OAAO,GAAW,GACnE,EAAKoC,MAAMC,MAAQ,eAACjB,EAAD,CAAOI,WAAY,cAAe7B,KAAK,mBAAmB4B,YAAY,mBAAmBd,MAAM,QAA/F,UAClB,sCACA,8HACA,sCACA,sCACA,yCAES,KACV,EAAK2B,MAAME,SACZ,cAACb,EAAD,CAAUD,WAAY,cAAef,MAAO,gBAA5C,SACE,uKAGF,KAEA,cAACsB,EAAD,CAAarB,MAAM,0BAKrB,OAAOoC,KAAKV,MAAMG,KACd,cAAC,EAAD,UAAiB,cAACwC,EAAD,MACjB,cAACA,EAAD,Q,GAtFUK,IAAMC,YEATC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6d469f19.chunk.js","sourcesContent":["export default function ActionButton({text, actionHandler, specClass, size, color, close, closeHandler}) {\n  \n    // assign css class\n    if (color === \"pink\"){color = \"pink-background\"}\n    else {color = \"blue-background\"}\n  \n    return ([\n        <div className={specClass} key={text + String(actionHandler)}>\n            <div className=\"action-button-container undecorated-link\" onClick={()=>console.log(\"y\")}>\n                <div className={\"action-button-inner \" + color} >\n                <p className=\"action-button-inner-text\">{text.toUpperCase()}</p>\n                </div>\n            </div>\n            {close === true ? \n                <div className=\"close-button text-center undecorated-link\" onClick={actionHandler}>\n                    <p>Close</p>\n                </div>\n                :\n                null\n            }\n        </div>\n    ])\n  }","import { Children } from \"react\";\n\nexport default function Row({title, image, rowClickHandler, children, roundImage}) {\n    return (\n        <div className=\"row-container\" onClick={rowClickHandler}>\n            <div className=\"row-image-container\">\n                <img src={\"/sample-data\"+image} className={\"row-image \" + (roundImage ? \"round-image\" : null)}/>\n            </div>\n            <div className=\"row-text-container\">\n                <p className=\"row-title\">{title}</p>\n                {children}\n            </div>\n        </div>  \n    )\n}","export default function Slider({sliderScreen, title1, title2, handleSliderChange}) {\n    return (\n        <div className=\"slider d-flex\">\n            <div className={\"slider-title-container \" + (sliderScreen == 0 ? 'slider-title-container-blue' : null)} onClick={() => handleSliderChange(0)}><p className=\"slider-title-text\">{title1}</p></div>\n            <div className={\"slider-title-container \" + (sliderScreen == 1 ? 'slider-title-container-blue' : null)} onClick={() => handleSliderChange(1)}><p className=\"slider-title-text\">{title2}</p></div>\n        </div>\n    )\n}","import ActionButton from \"./ActionButton\";\n\n// use conditional rendering in main file\nexport default function Popup({title, description, children, overlayHandler, placeholder, buttonText}) {\n    console.log(description)\n    return (\n        <>\n        <div className=\"overlay-black\" onClick={overlayHandler}></div>\n        <div className=\"popup-container\">\n            <p className='popup-title'>{title}</p>\n            <div className=\"popup-description-holder\">\n                {description ? <p className='popup-description'>{description}</p>:children}\n            </div>\n            <div className=\"popup-input-container\">\n                <input placeholder={placeholder}/>\n            </div>\n            <ActionButton text={buttonText} color=\"pink\" close={true}/>\n        </div> \n        </>\n    )\n}","import ActionButton from \"./ActionButton\";\n\nexport default function InfoCard({title, children, buttonAction, closeAction, buttonText, handleOverlay}){\n    return (\n        <>\n        <div className=\"overlay-black\" onClick={handleOverlay}></div>\n        <div className=\"infocard-container\">\n        <div className=\"infocard-close-x\" onClick={closeAction}>x</div>\n          <div className=\"infocard-title-container\">\n            <p className=\"infocard-title\">{title}</p>\n          </div>\n          <div className=\"infocard-main-content\">\n            {children}\n          </div>\n          <ActionButton text={buttonText} specClass={\"button-fixed-bottom\"} onClick={buttonAction}/>\n        </div>\n        </>\n    )   \n}","export default function HeaderTitle({title, backHandler}) {\n    return (\n        <div className=\"header-title-container\">\n            <div className=\"header-title-inner\">\n                <div className=\"back-arrow\" onClick={backHandler}><img className=\"back-arrow-img\" src=\"/arrow.png\"></img></div>\n                <div><p className=\"header-title\">{title}</p></div>\n            </div>\n        </div>\n    )\n}","export default function FixedButton({image, buttonHandler}) {\n    return (\n    <div className=\"circular-button-outer\" onClick={buttonHandler}>\n        <div className=\"circular-button-inner\">\n            <img src={\"/sample-data\"+image}/>\n        </div>\n    </div>    \n    )\n}","import React, { Fragment } from 'react'\nimport '../LazyDarkmode.scss'\n\nconst DarkModeWrapper = ({children}) => <div className=\"bigDarkMode\">{children}</div>\n\nexport default DarkModeWrapper","import React from 'react'\nimport './App.scss';\nimport ActionButton from './components/ActionButton.js';\nimport Row from './components/Row.js';\nimport Slider from './components/Slider.js';\nimport Popup from './components/Popup.js';\nimport InfoCard from './components/InfoCard.js';\nimport HeaderTitle from './components/HeaderTitle.js';\nimport FixedButton from './components/FixedButton.js';\nimport DarkModeWrapper from './components/DarkModeWrapper.js'\nimport {buildTP, shuffleArray, postToSheets, getData} from \"./functions.js\"\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      sliderScreen: 0,\n      popup: false,\n      infocard: false,\n      dark: false,\n      currency: null,\n      partners: undefined,\n      profile: undefined\n    }\n    this.handleSliderChange = this.handleSliderChange.bind(this)\n  }\n\n  handleSliderChange(desiredSliderScreen){\n    this.setState({sliderScreen: desiredSliderScreen})\n  }\n\n  componentDidMount() {  \n    const data = getData()\n\n    this.setState({\n      dark: data.isDarkModeEnabled,\n      currency: data.myCurrency,\n      partners: data.myPartners,\n      profile: data.myProfile,\n    }, console.log(this.state))\n  }\n\n  // to be updated with every experiment\n  tp(action){\n    return buildTP('testwebview')(action)\n  }\n\n  render(){\n\n    const MainContent = () => {\n      return (\n      <div className=\"App\">\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\"></meta>\n      <button onClick={() => this.tp('testbtn1')}> testbtn1!!!! </button>\n      <button onClick={() => this.tp('testbtn2')}> testbtn2 </button>\n      <div>\n        <p className=\"header-title\">currency:</p> <span><pre>{JSON.stringify(this.state.currency)}</pre></span>\n        <p className=\"header-title\">dark:</p> <span><pre>{JSON.stringify(this.state.dark)}</pre></span>\n        <p className=\"header-title\">partners:</p> <span><pre>{JSON.stringify(this.state.partners)}</pre></span>\n        <p className=\"header-title\">profile:</p> <span><pre>{JSON.stringify(this.state.profile)}</pre></span>\n      </div>\n      <HeaderTitle title={'I am category'}/>\n      <Slider \n        title1={\"Hello\"}\n        title2={\"World\"}\n        sliderScreen={this.state.sliderScreen}\n        handleSliderChange={this.handleSliderChange}\n      />\n      <Row title=\"Computer McComputerface\" image={\"/users/ranika.jpg\"} roundImage={true}>\n        <p>Now I can put anything I want in here!!!</p>\n        <pre>{JSON.stringify(this.state)}</pre>\n      </Row>\n      <Row title=\"Computer McComputerface\" image={\"/users/chelsea.jpg\"}>\n        <p>Now I can put anything I want in here here here here here here here here here here here here here here here here here here here here here here here here here here here here here here here here here here here here here here here here here here here here here</p>\n      </Row>\n      <ActionButton text={\"hello world\"} color={\"blue\"} close={true} key={1}/>\n      {this.state.popup ? <Popup buttonText={\"I am button\"} text=\"i am description\" placeholder=\"i am placeholder\" title=\"poppy\">\n        <p>hello</p>\n        <p>hello hello hello v hello vvhellohellohello hello hello hello hello hello hello hello hello v</p>\n        <p>hello</p>\n        <p>hello</p>\n        <p>hello</p>\n        \n      </Popup> : null}\n      {this.state.infocard ? \n      <InfoCard buttonText={\"I am button\"} title={\"I am infocard\"}>\n        <p>HELLO WORLDHELLO WORLDHELLO WORLDHELLO WORLDHELLO WORLDHELLO WORLDHELLO WORLDHELLO WORLDHELLO WORLDHELLO WORLDHELLO WORLDHELLO WORLD</p>\n      </InfoCard>\n      :\n      null\n      }\n      <FixedButton image=\"/flags/canada.png\"/>\n    </div>\n      )\n    }\n    \n    return this.state.dark \n      ? <DarkModeWrapper><MainContent/></DarkModeWrapper>\n      : <MainContent/>\n  }\n}\n\nexport default App;\n","import axios from 'axios'\n\nexport const buildTP = (prefix) => {\n  return (suffix) => {\n    // set up passed down tp functions\n    var NativeApp;\n    let name;\n\n    const capitalize = (word) => word.charAt(0).toUpperCase() + word.slice(1);\n\n    // if on Android\n    if (window.NativeApp){\n      name = \"Exp_\" + capitalize(prefix) + \"_\" + capitalize(suffix)\n      NativeApp = window.NativeApp\n    }\n    \n    // if on iOS\n    else if (window.webkit){\n      name = capitalize(prefix) + \"_\" + capitalize(suffix)\n      NativeApp = {\n        sendTrackingPoint: (name, val=true) => window.webkit.messageHandlers.sendTrackingPoint.postMessage({name: name, value: val})\n      }\n    }\n    \n    // if on web mock version\n    else {\n      name = \"Exp_\" + capitalize(prefix) + \"_\" + capitalize(suffix)\n      NativeApp = {\n        sendTrackingPoint: (name) => {console.log(name)}\n      }\n    }\n\n    if (suffix == undefined){return null}\n\n    if (name.split(\" \").length > 1) return console.error(\"Spaces aren't allowed in tracking points\")\n    else return NativeApp.sendTrackingPoint(name)\n  }\n}\n  \nexport const shuffleArray = (array) => {\n  for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array\n}\n  \nexport const postToSheets = (baseUrl, firstEl, secondEl) => { \n  let url = baseUrl + \"?groupName=\" + firstEl + \"&privacy=\" + secondEl // for testing\n  return axios.get(url)\n}\n\nexport const getData = () => {\n  let myProfile;\n  let myPartners;\n  let myCurrency;\n  let isDarkModeEnabled = false;\n\n  // if android \n  if (window.NativeApp){\n    myPartners = window.NativeApp.getPartners()\n    myProfile = window.NativeApp.getMyProfile()\n    myCurrency = window.NativeApp.getCurrency()\n  }\n  \n  // if ios \n  else if (window.webkit){\n    // automatically assigns values to above variables\n    window.webkit.messageHandlers.getMyProfile.postMessage({});\n    window.webkit.messageHandlers.getMyPartners.postMessage({});\n    window.webkit.messageHandlers.getMyCurrency.postMessage({});\n    window.webkit.messageHandlers.getDarkModeEnabled.postMessage({});\n  }\n\n  return {\n    myProfile: myProfile,\n    myPartners: myPartners,\n    myCurrency: myCurrency,\n    isDarkModeEnabled: false\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}